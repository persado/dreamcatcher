"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[767],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return c}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=d(n),c=i,f=m["".concat(p,".").concat(c)]||m[c]||u[c]||r;return n?a.createElement(f,l(l({ref:t},s),{},{components:n})):a.createElement(f,l({ref:t},s))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var d=2;d<r;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5879:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return c},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return u}});var a=n(3117),i=n(102),r=(n(7294),n(3905)),l=["components"],o={sidebar_position:2,title:"export",id:"export"},p=void 0,d={unversionedId:"api/export",id:"api/export",title:"export",description:"* Image binary data (based on the requested format)",source:"@site/docs/api/export.md",sourceDirName:"api",slug:"/api/export",permalink:"/dreamcatcher/docs/api/export",draft:!1,editUrl:"https://github.com/persado/dreamcatcher/edit/master/docs/docs/api/export.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"export",id:"export"},sidebar:"globalSidebar",previous:{title:"Configuration",permalink:"/dreamcatcher/docs/configuration"},next:{title:"performance",permalink:"/dreamcatcher/docs/api/performance"}},s={},u=[{value:"Source",id:"source",level:3},{value:"Loading Parameters",id:"loading-parameters",level:3},{value:"Image and PDF Parameters",id:"image-and-pdf-parameters",level:3},{value:"Image Parameters",id:"image-parameters",level:3},{value:"PDF Parameters",id:"pdf-parameters",level:3}],m={toc:u};function c(e){var t=e.components,n=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"POST /export/image\nPOST /export/pdf\nPOST /export/content\n")),(0,r.kt)("h1",{id:"response"},"Response"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Image binary data (based on the requested format)"),(0,r.kt)("li",{parentName:"ul"},"PDF binary data"),(0,r.kt)("li",{parentName:"ul"},"HTML data")),(0,r.kt)("h1",{id:"parameters"},"Parameters"),(0,r.kt)("h3",{id:"source"},"Source"),(0,r.kt)("p",null,"One source is required:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"url"),": STRING - Target URL to capture."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"htmlContent"),": STRING - HTML to render directly and capture. If this field is present, any value of ",(0,r.kt)("inlineCode",{parentName:"li"},"url")," will be ignored.")),(0,r.kt)("h3",{id:"loading-parameters"},"Loading Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"headers"),": OBJECT (Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"{}"),") - Headers to include in the request to the host specified in ",(0,r.kt)("inlineCode",{parentName:"li"},"url")," (e.g. for authentication)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"waitFor"),": ARRAY","[String selector OR Integer time in milliseconds]"," (Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"[]"),") - Array of conditions to wait for before capturing a representation. Conditions will be evaluated sequentially."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"waitTimeout"),": INTEGER (Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"30000"),") - Maximum number of milliseconds to wait for succesful navigation and for any conditions specified in ",(0,r.kt)("inlineCode",{parentName:"li"},"waitFor")," (non-cumulative) before returning an error response."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"waitForIdle"),": BOOLEAN (Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),") - Whether to consider navigation successful only once all network connections have been closed for at least 500 ms, rather than once the browser's ",(0,r.kt)("inlineCode",{parentName:"li"},"load")," event has been fired. Useful for capturing single-page applications where the load event may not be a reliable indicator of page readiness.")),(0,r.kt)("h3",{id:"image-and-pdf-parameters"},"Image and PDF Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"width"),": INTEGER (Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"800"),") - Width of browser viewport. If ",(0,r.kt)("inlineCode",{parentName:"li"},"width"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"height"),", and ",(0,r.kt)("inlineCode",{parentName:"li"},"selector")," are all omitted, Dreamcatcher will attempt to capture the entire target page, regardless of the default viewport."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"height"),": INTEGER (Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"600"),") - Height of browser viewport."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"scaleFactor"),": INTEGER (Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"2"),") - the device scaling factor for images. By default Dreamcatcher generates images with scale factor 2, suitable for retina / high DPI displays."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"emulateMediaType"),": ?STRING (Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"undefined"),") - if this is set, it will be passed to Puppeteer before printing. Valid values: ",(0,r.kt)("inlineCode",{parentName:"li"},"screen"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"print"),".")),(0,r.kt)("h3",{id:"image-parameters"},"Image Parameters"),(0,r.kt)("p",null,"The following applies only for image exports:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"selector"),": STRING (Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"body"),") -  CSS selector defining the portion of the page to capture. If a ",(0,r.kt)("inlineCode",{parentName:"li"},"selector")," is specified, it will be captured in its entirety regardless of the viewport dimensions specified in ",(0,r.kt)("inlineCode",{parentName:"li"},"width")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"height"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"viewportSelector"),": STRING - CSS selector defining the element of the page used to set the viewport dimensions. Use this when the viewport should be set to a different element than the selector and either ",(0,r.kt)("inlineCode",{parentName:"li"},"width")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"height")," are not set."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"imageType"),": STRING (Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"png"),") - The type of image you would like to export. Available options are ",(0,r.kt)("inlineCode",{parentName:"li"},"jpeg"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"png"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"webp"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"omitBackground"),": BOOLEAN (Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),"; Png only) - Whether or not to enable transparency for a png capture. Only ",(0,r.kt)("em",{parentName:"li"},"actively")," applies transparency to the body if the background-color isn't already set on it."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"imageQuality"),": INTEGER (Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"100"),"; Image with type of ",(0,r.kt)("inlineCode",{parentName:"li"},"jpeg")," only) - Available range is 0-100. Only applies when requesting a ",(0,r.kt)("inlineCode",{parentName:"li"},"jpeg")," image."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"clipArea"),": OBJECT (Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"{}"),") - Capture a cropped region of the page:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"x"),": INTEGER"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"y"),": INTEGER"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"width"),": INTEGER (Optional)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"height"),": INTEGER (Optional)")))),(0,r.kt)("h3",{id:"pdf-parameters"},"PDF Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"pdfOptions"),": OBJECT (Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"{landscape: true, printBackground: true}"),") - Options to pass to Puppeteer's ",(0,r.kt)("a",{parentName:"li",href:"https://pptr.dev/#?product=Puppeteer&version=v10.4.0&show=api-pagepdfoptions"},"pdf function"),".")))}c.isMDXComponent=!0}}]);